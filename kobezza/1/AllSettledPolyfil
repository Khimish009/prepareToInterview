function allSettled(iter) {
  const promises = [...iter].map((el) => Promise.resolve(el))
  const res = new Array(promises.length)

  let total = 0

  return new Promise((resolve) => {
    promises.forEach((promise, i) => {
      promise.then((value) => {
        res[i] = {
          status: 'fulfilled',
          value
        }

        total++

        if (total >= promises.length) {
          resolve(res)
        }
      }).catch((reason) => {
        res[i] = {
          status: 'rejected',
          reason
        }

        total++

        if (total >= promises.length) {
          resolve(res)
        }
      })
    })
  })
}

console.log(allSettled([1, Promise.resolve(2), Promise.reject(3)]).then(([v1, v2, v3]) => {
  console.log(v1); // {status: 'fulfilled', value: 1}
  console.log(v2); // {status: 'fulfilled', value: 2}
  console.log(v3); // {status: 'rejected', reason: 3}
}))
